<!--

Copyright 2005-2015 Red Hat, Inc.

Red Hat licenses this file to you under the Apache License, version
2.0 (the "License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied.  See the License for the specific language governing
permissions and limitations under the License.

-->
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:amq="http://activemq.apache.org/schema/core"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

    <!-- Allows us to use system properties and fabric as variables in this configuration file -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="properties">
        <bean class="io.fabric8.mq.fabric.ConfigurationProperties"/>
      </property>
    </bean>

    <broker xmlns="http://activemq.apache.org/schema/core" brokerName="brokerB" useJmx="true" dataDirectory="${data}"
            start="false" restartAllowed="false" deleteAllMessagesOnStartup="true" persistent="false">

      <destinationPolicy>
        <policyMap>
          <policyEntries>
            <policyEntry topic=">" producerFlowControl="true" alwaysRetroactive="true">
              <pendingMessageLimitStrategy>
                <constantPendingMessageLimitStrategy limit="1000"/>
              </pendingMessageLimitStrategy>
              <subscriptionRecoveryPolicy>
                <!-- <timedSubscriptionRecoveryPolicy recoverDuration="10800000" /> -->
                <timedSubscriptionRecoveryPolicy recoverDuration="0" />
              </subscriptionRecoveryPolicy>
            </policyEntry>
            <policyEntry queue=">" producerFlowControl="true" memoryLimit="1mb" prioritizedMessages="true">
            </policyEntry>
          </policyEntries>
        </policyMap>
      </destinationPolicy>

      <managementContext>
        <!-- <managementContext createConnector="true" rmiServerPort="1098" connectorPort="1099" -->
        <!--                    connectorHost="10.206.87.82" /> -->
        <managementContext createConnector="false"/>
      </managementContext>

      <!-- <persistenceAdapter> -->
      <!--   <kahaDB directory="${data}/kahadb"/> -->
      <!-- </persistenceAdapter> -->

      <plugins>
        <jaasAuthenticationPlugin configuration="karaf" />
        <authorizationPlugin>
          <map>
            <authorizationMap groupClass="org.apache.karaf.jaas.boot.principal.RolePrincipal">
              <!-- manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin,User -->
              <authorizationEntries>
                <authorizationEntry queue=">" read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" write="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" admin="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin"/>
                <authorizationEntry topic=">" read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" write="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" admin="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin"/>
                <authorizationEntry topic="ActiveMQ.Advisory.>" read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin,User" write="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin,User" admin="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin,User" />
              </authorizationEntries>
              <tempDestinationAuthorizationEntry>
                <tempDestinationAuthorizationEntry read="manager,viewer,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" write="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin" admin="manager,Operator,Maintainer,Deployer,Auditor,Administrator,SuperUser,admin"/>
              </tempDestinationAuthorizationEntry>
            </authorizationMap>
          </map>
        </authorizationPlugin>
      </plugins>

      <systemUsage>
        <systemUsage>
          <memoryUsage>
            <memoryUsage percentOfJvmHeap="70"/>
          </memoryUsage>
          <storeUsage>
            <storeUsage limit="100 gb"/>
          </storeUsage>
          <tempUsage>
            <tempUsage limit="50 gb"/>
          </tempUsage>
        </systemUsage>
      </systemUsage>

      <networkConnectors>
        <!-- Link to Broker A -->
        <networkConnector
            name="linkToBrokerA"
            uri="static:(tcp://10.22.54.7:61616)"
            networkTTL="3"
            dynamicOnly="false"
            conduitSubscriptions="true"
            decreaseNetworkConsumerPriority="false"
            duplex="false"
            userName="admin"
            password="admin">

          <!-- Exclude all destinations by default -->
          <excludedDestinations>
            <queue physicalName=">" />
            <topic physicalName=">" />
          </excludedDestinations>

          <!-- Only forward these to our connection -->
          <staticallyIncludedDestinations>
            <queue physicalName="sendToA.>"/>
            <topic physicalName="sendToA.>"/>
          </staticallyIncludedDestinations>
        </networkConnector>

        <!-- Link to Broker C -->
        <networkConnector
            name="linkToBrokerC"
            uri="static:(tcp://10.22.54.9:61616)"
            networkTTL="3"
            dynamicOnly="false"
            conduitSubscriptions="true"
            decreaseNetworkConsumerPriority="false"
            duplex="false"
            userName="admin"
            password="admin">

          <!-- Exclude all destinations by default -->
          <excludedDestinations>
            <queue physicalName=">" />
            <topic physicalName=">" />
          </excludedDestinations>

          <!-- Only forward these to our connection -->
          <staticallyIncludedDestinations>
            <queue physicalName="sendToC.>"/>
            <topic physicalName="sendToC.>"/>
          </staticallyIncludedDestinations>
        </networkConnector>

        <!-- Link to Broker D -->
        <networkConnector
            name="linkToBrokerD"
            uri="static:(tcp://10.22.54.17:61616)"
            networkTTL="3"
            dynamicOnly="false"
            conduitSubscriptions="true"
            decreaseNetworkConsumerPriority="false"
            duplex="false"
            userName="admin"
            password="admin">

          <!-- Exclude all destinations by default -->
          <excludedDestinations>
            <queue physicalName=">" />
            <topic physicalName=">" />
          </excludedDestinations>

          <!-- Only forward these to our connection -->
          <staticallyIncludedDestinations>
            <queue physicalName="sendToD.>"/>
            <topic physicalName="sendToD.>"/>
          </staticallyIncludedDestinations>
        </networkConnector>


      </networkConnectors>


      <transportConnectors>
        <transportConnector name="openwire" uri="tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
        <transportConnector name="amqp" uri="amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
        <transportConnector name="mqtt" uri="mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
        <transportConnector name="ws" uri="ws://0.0.0.0:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
        <transportConnector name="stomp" uri="stomp://0.0.0.0:61613?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600"/>
      </transportConnectors>

      <destinationInterceptors>
        <mirroredQueue copyMessage = "true" postfix=".qmirror" prefix=""/>
      </destinationInterceptors>


    </broker>

  </beans>
